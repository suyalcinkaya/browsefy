{"version":3,"file":"koalazily.m.js","sources":["../src/index.js"],"sourcesContent":["function koalazily({ offset = 100, threshold = 0.01, area, onLoad, useLoader = false, dataSelector = 'koalazily' } = {}) {\n  const images = Array.from(document.querySelectorAll(`[data-${dataSelector}]`));\n\n  if (!('IntersectionObserver' in window)) {\n    // If Intersection Observer API is not available, fall back with the normal loading of images.\n    images.forEach(loadImage);\n    return images;\n  }\n\n  // See here: https://css-tricks.com/preventing-content-reflow-from-lazy-loaded-images/\n  images.forEach(image => {\n    const width = image.clientWidth || image.offsetWidth;\n    const height = image.clientHeight || image.offsetHeight;\n\n    if (width && height) {\n      image.src = Boolean(useLoader)\n        ? `data:image/svg+xml,%3Csvg id='koalazily-loader' width='${width}px' height='${height}px' viewBox='0 0 ${width} ${height}' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cstyle type='text/css'%3E @keyframes koalazily-pulse %7B 0%25 %7Bbackground-position: 0%25 0%25; %7D 100%25 %7Bbackground-position: -135%25 0%25; %7D%0A%7D%0Asvg%23koalazily-loader %7B background: linear-gradient(-90deg, %23e0e0e0 0%25, %23f0f0f0 50%25, %23e0e0e0 100%25); background-size: 400%25 400%25; animation: koalazily-pulse 1.2s ease-in-out infinite;%0A%7D %3C/style%3E%3C/svg%3E`\n        : `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`\n    }\n  });\n\n  function loadImage(image) {\n    image.src = image.dataset[dataSelector];\n    image.onload = () => {\n      if (onLoad) onLoad(image);\n      delete image.dataset[dataSelector];\n    }\n  }\n\n  function onIntersection(entries) {\n    entries.forEach(entry => {\n      if (entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        loadImage(entry.target);\n      }\n    });\n  }\n\n  const options = {\n    root: area,\n    rootMargin: `${offset}px 0px`,\n    threshold: threshold\n  };\n  const observer = new IntersectionObserver(onIntersection, options);\n  images.forEach(image => observer.observe(image));\n  return images;\n}\n\nexport default koalazily;"],"names":["images","Array","from","document","querySelectorAll","dataSelector","window","forEach","loadImage","image","src","dataset","onload","onLoad","width","clientWidth","offsetWidth","height","clientHeight","offsetHeight","Boolean","useLoader","observer","IntersectionObserver","entries","entry","intersectionRatio","unobserve","target","root","area","rootMargin","offset","threshold","observe"],"mappings":"eAAA,2BAAqH,kCAAvF,sCAAiB,2DAAgC,uCAAsB,iBAC7FA,EAASC,MAAMC,KAAKC,SAASC,0BAA0BC,aAEvD,yBAA0BC,eAE9BN,EAAOO,QAAQC,GACRR,WAeAQ,EAAUC,GACjBA,EAAMC,IAAMD,EAAME,QAAQN,GAC1BI,EAAMG,kBACAC,GAAQA,EAAOJ,UACZA,EAAME,QAAQN,IAfzBL,EAAOO,iBAAQE,OACPK,EAAQL,EAAMM,aAAeN,EAAMO,YACnCC,EAASR,EAAMS,cAAgBT,EAAMU,aAEvCL,GAASG,IACXR,EAAMC,IAAMU,QAAQC,6DAC0CP,iBAAoBG,sBAA0BH,MAASG,ujBACpCH,MAASG,0BA0BxFK,EAAW,IAAIC,8BAdGC,GACtBA,EAAQjB,iBAAQkB,GACVA,EAAMC,kBAAoB,IAC5BJ,EAASK,UAAUF,EAAMG,QACzBpB,EAAUiB,EAAMG,YAKN,CACdC,KAAMC,EACNC,WAAeC,WACfC,UAAWA,WAGbjC,EAAOO,iBAAQE,UAASa,EAASY,QAAQzB,KAClCT"}